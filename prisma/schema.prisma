// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Manga {
  id          Int                 @id @default(autoincrement())
  year        Int
  cover       Covers[]
  description MangaDescriptions[]
  added       DateTime            @default(now())
  status      MangaStatus
  genres      MangaGenres[]
}

model Covers {
  id        Int       @id @default(autoincrement())
  manga     Manga?    @relation(fields: [mangaId], references: [id])
  mangaId   Int?
  file      String
  langCodes LangCodes @relation(fields: [lang], references: [id])
  lang      Int
}

model LangCodes {
  id                Int                 @id @default(autoincrement())
  covers            Covers[]
  name              String
  mangaDescriptions MangaDescriptions[]
  mangaGenres       MangaGenres[]
}

model MangaDescriptions {
  id          Int       @id @default(autoincrement())
  manga       Manga?    @relation(fields: [mangaId], references: [id])
  mangaId     Int?
  text        String
  langCodes   LangCodes @relation(fields: [langCodesId], references: [id])
  langCodesId Int
}

model MangaGenres {
  id          Int       @id @default(autoincrement())
  name        String
  langCodes   LangCodes @relation(fields: [langCodesId], references: [id])
  manga       Manga?    @relation(fields: [mangaId], references: [id])
  mangaId     Int?
  langCodesId Int
}

enum MangaStatus {
  release
  ongoing
  finish
}
