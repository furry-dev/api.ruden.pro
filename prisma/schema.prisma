// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Languages

model LangCodes {
  id                      Int                       @id @default(autoincrement())
  covers                  MangaCovers[]
  name                    String
  mangaDescriptions       MangaDescriptions[]
  mangaTitle              MangaTitle[]
  MangaGenresTranslations MangaGenresTranslations[]
}

// Mangas

model Manga {
  id          Int                 @id @default(autoincrement())
  year        Int
  cover       MangaCovers[]
  title       MangaTitle[]
  description MangaDescriptions[]
  added       DateTime            @default(now())
  status      MangaStatus
  genres      MangaToGenres[]
  age_rating  AgeRatings
}

model MangaCovers {
  id        Int       @id @default(autoincrement())
  manga     Manga?    @relation(fields: [mangaId], references: [id], onDelete: Cascade)
  mangaId   Int?
  file      String
  langCodes LangCodes @relation(fields: [lang], references: [id])
  lang      Int
}

model MangaTitle {
  id          Int       @id @default(autoincrement())
  manga       Manga?    @relation(fields: [mangaId], references: [id], onDelete: Cascade)
  mangaId     Int?
  text        String
  langCodes   LangCodes @relation(fields: [lang], references: [id])
  lang Int
}

model MangaDescriptions {
  id          Int       @id @default(autoincrement())
  manga       Manga?    @relation(fields: [mangaId], references: [id], onDelete: Cascade)
  mangaId     Int?
  text        String
  langCodes   LangCodes @relation(fields: [lang], references: [id])
  lang Int
}

model MangaToGenres {
  id      Int    @id @default(autoincrement())
  manga   Manga? @relation(fields: [mangaId], references: [id], onDelete: Cascade)
  mangaId Int?
}

model MangaGenres {
  id           Int                       @id @default(autoincrement())
  name         String
  transtalions MangaGenresTranslations[]
}

model MangaGenresTranslations {
  id            Int          @id @default(autoincrement())
  name          String
  langCodes     LangCodes    @relation(fields: [lang], references: [id])
  lang   Int
  MangaGenres   MangaGenres? @relation(fields: [mangaGenres], references: [id])
  mangaGenres Int?
}

enum MangaStatus {
  release
  ongoing
  finish
}

enum AgeRatings {
  R_18
  R_16
  R_12
}
